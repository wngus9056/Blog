---
title:  "[DataBase] Usecase Diagram"
subtitle: "유스케이스란?"
author: "Sirom"
avatar: "img/authors/Ho.jpg"
image: "img/UseCase.JPG"
date:   2022-02-14 04:12:12
---
***

<b class="topic">유스케이스 다이어그램(Usecase Diagram)</b>
<p class="content">
  - 시스템에서 제공해야 하는 <b>기능</b>이나 <b>서비스</b>를 명세한 다이어그램으로<br>
   <b>사용자와 시스템 사이</b>의 상호작용을 보여준다.<br>
  - 외부에서 본 시스템의 기능을 표현하므로 실제 내부의 비즈니스 로직이 아닌<br>
   <b>사용자(Actor)</b>가 수행하는 기능을 파악하고 싶을 때 작성한다.
</p>
<br>
<br>
<b class="topic">그럼 유스케이스 다이어그램은 어떨 때 그려주는가?</b>
<p class="content">-유스케이스 다이어그램은 다양한 <b>사용자(Actor)</b>가 시스템의 기능과 <b>상호작용</b> 하는 것을<br> 
   표현하기 때문에 <b>요구사항을 추출</b>하는 분야에 특화되어있다.<br>
   그렇기 때문에 제품의 요구사항 명세서를 작성하는 <b>요구분석 단계</b>에서 그려주며<br>
   프로젝트 개발 범위를 정하거나 사용자의 요구사항을 정의하고, 이 프로그램에서 수행해야 하는 기능의 명세를 알아야 할 때 그린다.
</p>
<br>
<br>
<b class="topic">유스케이스 다이어그램의 구성요소</b>
<p class="content">
  [1] Scope<br>
  <img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FbKUzV2%2FbtqD7GQ9hFz%2FjsaYUjCUeA8zWF7HVqHulK%2Fimg.png" width="400" height="400"><br>
  - 시스템이 제공하는 <b>기능의 범위</b>를 나타날 때 쓰인다.
</p>
<br>
<p class="content">
  [2] Usecase<br>
  <img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2Fnn1ji%2FbtqD8iWBj8B%2Fmh8iz4ryxEoxfWW0key4w0%2Fimg.png" width="400" height="400"><br>
  - 시스템의 <b>서비스</b>와 <b>기능</b>을 나타내고 <b>사용자의 요구사항</b>을 <b>구조화</b> 한 것이다.
</p>
<br>
<p class="content">
  [3] Actor<br>
  <img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FdNjqd1%2FbtqD8N29nY1%2FQBJAaLyu3fLbyWPEi9OQWk%2Fimg.png" width="400" height="400"><br>
  - <b>Actor</b>는 <b>시스템 외부</b>에서 시스템과 상호작용 하는 존재이다.<br>
  - 사람 뿐만 아니라 <b>외부 시스템도</b> Actor로 표현할 수 있다.<br>
  - Actor끼리는 서로 상속되고 일반화될 수 있다.<br>
  <br>
  primary actor<br>
  - 시스템을 사용하는 사용자(Actor)다.<br>
  <br>
  secondary actor<br>
  - 시스템과 상호작용하는 <b>외부 시스템</b>으로 사람이 아니며 &lt;&lt;actor&gt;&gt;라고 명시해준다.<br>
</p>
<br>
<p class="content">
  [4] Relationship<br>
  <img src="https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory2&fname=https%3A%2F%2Fblog.kakaocdn.net%2Fdn%2FH8d2u%2FbtqD9uaZF7p%2FvUJuoF6G4piVLbEzTlEEd1%2Fimg.png" width="400" height="400"><br>
  - 관계는 Actor와 Usecase, Usecase와 Usecase 사이에 나타나고 총 4가지 종류가 있다.<br>
  <br>
  association<br>
  - <b>Usecase</b>와 <b>Actor</b>의 관계를 표현할 때 쓰인다.<br>
  - <b>Actor</b>는 정보를 요구하거나 받고, <b>Usecase</b>는 정보를 제공한다.<br>
  - 쉽게 말해, Actor가 Usecase를 사용하는 것을 표현한다.<br>
  <br>
  Include<br>
  - 기능에 사용한다.<br>
  - 한 Usecase가 다른 Usecase의 수행을 요청할 때 쓰인다.<br>
  - 사진을 예시로 설명하자면, 게시글 작성과 게시글 투표 기능은 로그인 기능을 필수적으로 요구하기 때문에 Include관계로 연결시켰다.<br>
  - 일반적으로 여러 기능에서 공통으로 사용해야 하는 <b>모듈</b>같은 기능에 추가되는 키워드이다.<br>
   너무 남용하면 오히려 기능을 파악하기 어려워지기 때문에 적절하게 사용해야 한다.<br>
  <br>
  Generalization<br>
  - 일반화 관계이다.<br>
  - 게시글 투표는 추천, 비추천 투표를 추상화한 기능으로 일반화 관계를 설정할 수 있다.<br>
  <br>
  Extended<br>
  - 특정 조건이 만족되는 경우에만 실행되는 기능이다.<br>
  - 사진을 예시로 설명하자면, Actor(사용자)는 게시글을 작성할 때 동영상을 첨부 할 수도 있고, 첨부하지 않을 수도 있다. 이처럼 기능을 수행할 때, 특정 조건에서만 동작하는 기능은 Extend로 표현하면 효과적으로 다이어그램을 작성할 수 있다.<br>
</p>
<br>
